document.addEventListener("DOMContentLoaded", function () {
    console.log("‚úÖ JavaScript Loaded in Dashboard!");
    
    const addToCartButtons = document.querySelectorAll(".add-to-cart-btn");

    addToCartButtons.forEach(button => {
        console.log("üìå ‡∏û‡∏ö‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤:", button);
        button.addEventListener("click", function () {
            const productId = this.dataset.productId;
            const quantityField = document.querySelector(`#quantity-${productId}`);
            const quantity = quantityField ? parseInt(quantityField.value, 10) : 1;

            const productNameElement = document.querySelector(`[data-product-name="${productId}"]`);
            const productPriceElement = document.querySelector(`[data-product-price="${productId}"]`);

            if (!productNameElement || !productPriceElement) {
                console.error("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÑ‡∏î‡πâ");
                return;
            }

            const productName = productNameElement.innerText;
            const productPrice = parseFloat(productPriceElement.innerText);

            console.log("üü¢ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤:", { productId, productName, productPrice, quantity });

            // ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ï‡∏≤‡∏£‡∏≤‡∏á (‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ AJAX)
            updateCartTable(productId, productName, productPrice, quantity);
        });
    });
});

// ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ï‡∏≤‡∏£‡∏≤‡∏á
function updateCartTable(productId, name, price, quantity) {
    console.log("üîÑ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ï‡∏≤‡∏£‡∏≤‡∏á -", productId, name, price, quantity);

    const cartBody = document.getElementById("cart-body");
    let existingRow = document.querySelector(`#cart-body tr[data-product-id="${productId}"]`);

    if (existingRow) {
        console.log("üü¢ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á");
        let quantityCell = existingRow.querySelector(".cart-quantity");
        let totalCell = existingRow.querySelector(".cart-total");

        let newQuantity = parseInt(quantityCell.innerText, 10) + quantity;
        quantityCell.innerText = newQuantity;
        totalCell.innerText = (newQuantity * price).toFixed(2);
    } else {
        console.log("üÜï ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà‡∏•‡∏á‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á");
        let row = document.createElement("tr");
        row.setAttribute("data-product-id", productId);
        row.innerHTML = `
            <td class="border p-2">${productId}</td>
            <td class="border p-2">${name}</td>
            <td class="border p-2">${price.toFixed(2)}</td>
            <td class="border p-2 cart-quantity">${quantity}</td>
            <td class="border p-2 cart-total">${(price * quantity).toFixed(2)}</td>
            <td class="border p-2">
                <button class="remove-item bg-red-500 text-white p-1 rounded">‡∏•‡∏ö</button>
            </td>
        `;
        cartBody.appendChild(row);
    }

    addRemoveEvent();
}

// ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏•‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ï‡∏≤‡∏£‡∏≤‡∏á
function addRemoveEvent() {
    document.querySelectorAll(".remove-item").forEach(button => {
        button.addEventListener("click", function () {
            this.closest("tr").remove();
        });
    });
}
