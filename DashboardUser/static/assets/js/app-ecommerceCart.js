document.addEventListener("DOMContentLoaded", function () {
    var categorySelect = document.getElementById("categorySelect");

    document
        .getElementById("searchForm")
        .addEventListener("submit", function (event) {
            event.preventDefault(); // ‚úÖ ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡∏£‡∏µ‡πÇ‡∏´‡∏•‡∏î

            var categoryId = categorySelect.value; // ‚úÖ ‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
            var productList = document.getElementById("productList1"); // ‚úÖ ‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤

            fetch(`/apps_ecommerceCart/?category=${categoryId}`, {
                headers: { "X-Requested-With": "XMLHttpRequest" }, // ‚úÖ ‡πÅ‡∏à‡πâ‡∏á Django ‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô AJAX Request
            })
                .then((response) => response.text())
                .then((data) => {
                    productList.innerHTML = data; // ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÅ‡∏ö‡∏ö Real-Time
                })
                .catch((error) => console.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ", error));
        });
});

// ----------------------------------‡∏™‡∏≥‡∏´‡∏£‡∏µ‡∏ö‡πÄ‡∏Ñ‡∏µ‡∏¢‡∏£‡πå‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠---------------------------
document
    .getElementById("clearFilterButton")
    .addEventListener("click", function (event) {
        event.preventDefault(); // ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏µ‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏ô‡πâ‡∏≤
        var productList = document.getElementById("productList1"); // ‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤

        fetch("/apps_ecommerceCart/", {
            method: "GET", // ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠ GET ‡πÑ‡∏õ‡∏¢‡∏±‡∏á URL
            headers: {
                "X-Requested-With": "XMLHttpRequest", // ‡πÅ‡∏à‡πâ‡∏á Django ‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏≥‡∏Ç‡∏≠ AJAX
            },
        })
            .then((response) => response.text()) // ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏õ‡πá‡∏ô HTML
            .then((data) => {
                productList.innerHTML = data; // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
            })
            .catch((error) => console.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ", error));
    });

// ----------------------------------‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•---------------------------

document.addEventListener("DOMContentLoaded", function () {
    const searchForm = document.getElementById("searchForm");
    const clearButton = document.getElementById("clearFilterButton");
    const productList = document.getElementById("productList1");

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠ AJAX ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏≠‡∏á
    function fetchProducts() {
        const formData = new FormData(searchForm);
        const urlParams = new URLSearchParams(formData).toString(); // ‡πÅ‡∏õ‡∏•‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÄ‡∏õ‡πá‡∏ô query string

        fetch(`/apps_ecommerceCart/?${urlParams}`, {
            method: "GET",
            headers: {
                "X-Requested-With": "XMLHttpRequest", // ‡πÅ‡∏à‡πâ‡∏á Django ‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏≥‡∏Ç‡∏≠ AJAX
            },
        })
            .then((response) => response.text()) // ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏õ‡πá‡∏ô HTML
            .then((data) => {
                productList.innerHTML = data;
                // ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
            })
            .catch((error) => console.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ", error));
    }

    // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏ñ‡∏π‡∏Å submit
    searchForm.addEventListener("submit", function (event) {
        event.preventDefault(); // ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏µ‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏ô‡πâ‡∏≤
        fetchProducts(); // ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠ AJAX
    });

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏≠‡∏á
    clearButton.addEventListener("click", function (event) {
        event.preventDefault(); // ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏µ‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏ô‡πâ‡∏≤

        // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ü‡∏≠‡∏£‡πå‡∏°
        searchForm.reset();

        // ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠ AJAX ‡πÉ‡∏´‡∏°‡πà‡πÉ‡∏´‡πâ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
        fetchProducts();
    });

    // ‡πÄ‡∏û‡∏¥‡πà‡∏° event listener ‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
    const searchBarcode = document.getElementById("searchBarcode");
    searchBarcode.addEventListener("input", function () {
        fetchProducts(); // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà
    });

    // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏ô‡πâ‡∏≤ (‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏Å‡∏£‡∏≠‡∏á‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å)
    fetchProducts();
});

const cartItems = [];

document.addEventListener("click", function (event) {
    if (event.target.classList.contains("add-to-cart")) {
        console.log("üéØ ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ ‡∏ñ‡∏π‡∏Å‡∏Å‡∏î‡πÅ‡∏•‡πâ‡∏ß!");

        // ‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å data-attributes
        const productId = event.target.getAttribute("data-id");
        const productName = event.target.getAttribute("data-name");
        const productPrice = event.target.getAttribute("data-price");
        const productImage = event.target.getAttribute("data-image");
        const ProductStock = event.target.getAttribute("data-stock");
        const ProductBarcode = event.target.getAttribute("data-barcode");
        const ProductProfitprice = event.target.getAttribute("data-profitprice");

        console.log(
            `üìå ID=${productId}, Name=${productName}, Price=${productPrice}`
        );

        if (!productId || !productName || !productPrice) {
            console.error("‚ùå ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î");
            return;
        }

        const cartContainer = document.querySelector("#cart-items");

        // ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏à‡∏≤‡∏Å input ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏õ‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏Å‡∏î
        const parent = event.target.closest("p"); // ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ï‡∏≤‡∏°‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏à‡∏£‡∏¥‡∏á
        const quantityInput = parent?.previousElementSibling?.querySelector(".inputText");
        // ‚úÖ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô parseFloat ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏ó‡∏®‡∏ô‡∏¥‡∏¢‡∏°
        let quantity = quantityInput ? parseFloat(quantityInput.value) : 1;
        if (!quantity || quantity <= 0) quantity = 1;

        const totalPrice = (parseFloat(productPrice) * quantity).toLocaleString(
            "en-US",
            {
                minimumFractionDigits: 2,
                maximumFractionDigits: 2,
            }
        );

        console.log("‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£1", cartItems);

        console.log("‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤ inputText", quantity);

        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        let existingProduct = document.querySelector(
            `.cart-item[data-id="${productId}"]`
        );

        if (existingProduct) {
            // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß ‡πÉ‡∏´‡πâ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô
            const existingQuantityInput = existingProduct.querySelector(".products-quantity");
            const currentQuantity = parseFloat(existingQuantityInput.value) || 0;
            const newQuantity = currentQuantity + quantity;
            existingQuantityInput.value = newQuantity;
            // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏≤‡∏Ñ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏£‡∏ß‡∏°
            const newTotal = (parseFloat(productPrice) * newQuantity).toLocaleString("en-US", {
                minimumFractionDigits: 2,
                maximumFractionDigits: 2,
            });

            existingProduct.querySelector(".products-line-price").textContent =
                newTotal;

            // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏≠‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
            const index = cartItems.findIndex((item) => item.id === productId);
            if (index !== -1) {
                cartItems[index].quantity += quantity;
                cartItems[index].total =
                    parseFloat(productPrice) * cartItems[index].quantity;
            }


            // ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÅ‡∏ñ‡∏ß‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏î‡πâ‡∏≤‡∏ô‡∏Ç‡∏ß‡∏≤
            
    
            // ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï existingProduct ‡πÅ‡∏•‡πâ‡∏ß‡πÉ‡∏´‡πâ‡πÉ‡∏™‡πà
        
      const allTotal = cartItems.reduce((sum, item) => sum + item.total, 0);
      document.querySelector(".cart-total").textContent = `${allTotal.toLocaleString('en-US', { minimumFractionDigits: 2 })} ‡∏ö‡∏≤‡∏ó`;

      const tableBody = document.querySelector(".table-total");
      const existingRow = tableBody?.querySelector(`tr[data-id="${productId}"]`);
      if (existingRow) {
        const priceCell = existingRow.querySelector(".product-total-cell");
        const oldTotal = parseFloat(priceCell.getAttribute("data-total")) || 0;
        const newRowTotal = oldTotal + (parseFloat(productPrice) * quantity);
        priceCell.setAttribute("data-total", newRowTotal);
        priceCell.textContent = `${newRowTotal.toLocaleString('en-US', { minimumFractionDigits: 2 })} ‡∏ö‡∏≤‡∏ó`;
      }


    
        } else {
            // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô array
            cartItems.push({
                id: productId,
                stock: ProductStock,
                name: productName,
                barcode: ProductBarcode,
                Profitprice: ProductProfitprice,
                quantity: quantity,
                unitPrice: parseFloat(productPrice),
                total: parseFloat(productPrice) * quantity,
            });


            console.log("‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£", cartItems);


            // ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏°‡∏∏‡∏°‡∏Ç‡∏ß‡∏≤‡∏™‡∏∏‡∏î
            const tableBody = document.querySelector(".table-total");

            if (tableBody) {

              const totalRow = tableBody.querySelector(".cart-summary-row");
              const newRow = document.createElement("tr");
              newRow.setAttribute("data-id", productId); // ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏î‡πâ‡∏ß‡∏¢ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÑ‡∏î‡πâ
              newRow.innerHTML = `
                <td class="py-2 text-slate-500 dark:text-zink-200">${productName}</td>
                <td class="py-2 text-slate-500 dark:text-zink-200 product-total-cell" data-total="${parseFloat(productPrice) * quantity}">
                  ${totalPrice} ‡∏ö‡∏≤‡∏ó
                </td>
              `;
              
            
              if (totalRow) {
                tableBody.insertBefore(newRow, totalRow); // ‚úÖ ‡πÅ‡∏ó‡∏£‡∏Å‡∏Å‡πà‡∏≠‡∏ô totalRow
              } else {
                tableBody.appendChild(newRow);
              }
              // ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏ó‡∏±‡πâ‡∏á‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô‡πÅ‡∏•‡∏∞‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏±‡∏ô‡∏ô‡πà‡∏∞‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏ß‡πà‡∏≤ ‡∏°‡∏±‡∏ô‡∏à‡∏∞‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏ö‡πÄ‡∏î‡∏ó
              const allTotal = cartItems.reduce((sum, item) => sum + item.total, 0);
              document.querySelector(".cart-total").textContent = `${allTotal.toLocaleString('en-US', { minimumFractionDigits: 2 })} ‡∏ö‡∏≤‡∏ó`;
            } else {
              console.error("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö .table-total ‡πÉ‡∏ô DOM");
            }
            

             console.log("totalProfit",totalPrice)
             console.log("tableBody",tableBody);


            // ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤ ‡πÉ‡∏´‡πâ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà
            const newItem = `
                <div class="card products cart-item" data-id="${productId}">
                    <div class="card-body">
                        <div class="grid grid-cols-1 gap-4 lg:grid-cols-12">
                            <div class="p-4 rounded-md lg:col-span-2 bg-slate-100 dark:bg-zink-600">
                                <img src="${productImage}" alt="">
                            </div>
                            <div class="flex flex-col lg:col-span-4">
                                <div>
                                    <h5 class="mb-1 text-16"><a href="#">${productName}</a></h5>
                                    <p class="mb-2 text-slate-500 dark:text-zink-200"><a href="#!">ID ${productId}</a></p>
                                    <p class="mb-1 text-slate-500 dark:text-zink-200">‡∏£‡∏≤‡∏Ñ‡∏≤: <span class="text-slate-800 dark:text-zink-50">${productPrice}</span></p>
                                    <p class="mb-1 text-slate-500 dark:text-zink-200">Stock: <span class="text-slate-800 dark:text-zink-50">${ProductStock}</span></p>
                                    <p class="mb-3 text-slate-500 dark:text-zink-200">Barcode: <span class="text-slate-800 dark:text-zink-50">${ProductBarcode}</span></p>
                                </div>
                                <div class="flex items-center gap-2 mt-auto">
                                    <div class="flex items-center">
                                        <span class="inline-block px-3 py-2 border ltr:border-r-0 rtl:border-l-0 border-slate-200 dark:border-zink-500 ltr:rounded-l-md rtl:rounded-r-md">PCS/Kg</span>
                                      <input type="number" class="inputText products-quantity ltr:rounded-l-none rtl:rounded-r-none form-input border-slate-200 dark:border-zink-500 bg-white dark:bg-zink-700 text-slate-900 dark:text-zink-100 focus:outline-none focus:border-custom-500" value="${quantity}">

                                    </div>
                                    <button class="remove-btn text-white bg-red-500 border-red-500 btn">‡∏•‡∏ö</button>
                                </div>
                            </div>
                            <div class="flex justify-between w-full lg:flex-col lg:col-end-13 lg:col-span-2">
                                <div class="mb-auto ltr:lg:text-right rtl:lg:text-left">
                                    <h6 class="text-16 products-price"><span>${productPrice}</span></h6>
                                </div>
                                <h6 class="mt-auto ltr:lg:text-right rtl:lg:text-left text-16">‡∏£‡∏ß‡∏° <span class="products-line-price">${totalPrice}</span></h6>
                            </div>
                        </div>
                    </div>
                </div>
            `;
            cartContainer.insertAdjacentHTML("beforeend", newItem);

          
        }
    }
});








document.addEventListener("click", function (event) {
    if (event.target.id === "sa-success") {
        Swal.fire({
            title: "‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡πâ‡∏ß!",
            text: "‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ñ‡∏π‡∏Å‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÅ‡∏•‡πâ‡∏ß!",
            icon: "success",
            confirmButtonText: "OK", // ‡∏ï‡∏±‡πâ‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏õ‡∏∏‡πà‡∏° OK
            customClass: {
                confirmButton:
                    "text-white btn bg-custom-500 border-custom-500 hover:text-white hover:bg-custom-600 hover:border-custom-600 focus:text-white focus:bg-custom-600 focus:border-custom-600 focus:ring focus:ring-custom-100 active:text-white active:bg-custom-600 active:border-custom-600 active:ring active:ring-custom-100 dark:ring-custom-400/20 ltr:mr-1 rtl:ml-1",
            },
            buttonsStyling: false,
            showCloseButton: true, // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏≠‡∏¢‡∏≤‡∏Å‡πÉ‡∏´‡πâ‡∏°‡∏µ‡∏õ‡∏∏‡πà‡∏° X ‡∏õ‡∏¥‡∏î popup ‡πÉ‡∏´‡πâ‡∏•‡∏ö‡∏≠‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏≠‡∏≠‡∏Å
        });
    }
});

document.addEventListener("DOMContentLoaded", function () {
    const cartContainer = document.querySelector("#cart-items");

    cartContainer.addEventListener("click", function (event) {
        const removeButton = event.target.closest(".remove-btn"); // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏ö

        if (removeButton) {
            console.log("üõë ‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏ö‡∏ñ‡∏π‡∏Å‡∏Ñ‡∏•‡∏¥‡∏Å");

            const productCard = removeButton.closest(".card.products");

            if (productCard) {
                const productId = productCard.getAttribute("data-id");
                // ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡∏•‡∏ö
                Swal.fire({
                    title: "‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?",
                    text: "‡∏Ñ‡∏∏‡∏ì‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Å‡∏π‡πâ‡∏Ñ‡∏∑‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ!",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonText: "‡πÉ‡∏ä‡πà, ‡∏•‡∏ö‡∏≠‡∏≠‡∏Å‡πÄ‡∏•‡∏¢!",
                    cancelButtonText: "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å",
                    customClass: {
                        confirmButton: "text-white btn bg-custom-500 border-custom-500",
                        cancelButton: "text-white bg-red-500 border-red-500 btn",
                    },
                    buttonsStyling: false,
                }).then((result) => {
                    if (result.isConfirmed) {
                        // ‡∏•‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô
                        productCard.remove();

                        // ‡∏•‡∏ö‡∏à‡∏≤‡∏Å array ‡∏î‡πâ‡∏ß‡∏¢
                        const index = cartItems.findIndex((item) => item.id === productId);
                        if (index !== -1) {
                            cartItems.splice(index, 1);
                            console.log("üßπ ‡∏•‡∏ö‡∏à‡∏≤‡∏Å array ‡πÅ‡∏•‡πâ‡∏ß:", cartItems);
                        }

                         // ‡∏•‡∏ö‡πÅ‡∏ñ‡∏ß‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏î‡πâ‡∏≤‡∏ô‡∏Ç‡∏ß‡∏≤
                         const tableBody = document.querySelector(".table-total");
                         const rowToRemove = tableBody?.querySelector(`tr[data-id="${productId}"]`);
                         if (rowToRemove) {
                             rowToRemove.remove();
                             console.log("‚úÖ ‡∏•‡∏ö‡πÅ‡∏ñ‡∏ß‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÅ‡∏•‡πâ‡∏ß");
                         }

                        // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°
                        const newTotal = cartItems.reduce((sum, item) => sum + item.total, 0);
                        document.querySelector(".cart-total").textContent = `${newTotal.toLocaleString('en-US', { minimumFractionDigits: 2 })} ‡∏ö‡∏≤‡∏ó`;

                        // ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
                        Swal.fire({
                            title: "‡∏•‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!",
                            text: "‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ñ‡∏π‡∏Å‡∏•‡∏ö‡πÅ‡∏•‡πâ‡∏ß.",
                            icon: "success",
                        });
                    }
                });
            }
        }
    });
});



// ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡πÄ‡∏Å‡πá‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
let totalAmount = 0;
let receivedAmount = 0;

// ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°
function setTotal(amount) {
  totalAmount = amount;
  document.getElementById('totalDue').textContent = `‡∏ø${totalAmount.toFixed(2)}`;
  calculateChange();
}

// ‡∏õ‡∏∏‡πà‡∏°‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç
document.querySelectorAll('.pos-key').forEach(button => {
  button.addEventListener('click', () => {
    const input = document.getElementById('received');
    const key = button.textContent;
    
    if (key === 'C') {
      input.textContent = '‡∏ø0.00';
      receivedAmount = 0;
    } else if (key === '‚å´') {
      receivedAmount = Math.floor(receivedAmount / 10);
      input.textContent = `‡∏ø${receivedAmount.toFixed(2)}`;
    } else if (key === '=') {
      calculateChange();
    } else if (key === '.') {
      // ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏≥‡∏≠‡∏∞‡πÑ‡∏£‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡∏à‡∏∏‡∏î‡πÅ‡∏•‡πâ‡∏ß
      if (!input.textContent.includes('.')) {
        input.textContent += '.';
      }
    } else {
      receivedAmount = parseFloat((receivedAmount.toString() + key).replace(/^0+/, ''));
      input.textContent = `‡∏ø${receivedAmount.toFixed(2)}`;
    }
    
    calculateChange();
  });
});

// ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏î‡∏•‡∏±‡∏î
document.querySelectorAll('.quick-bill').forEach(button => {
  button.addEventListener('click', () => {
    if (button.textContent === '‡∏≠‡∏∑‡πà‡∏ô‡πÜ') {
      // ‡πÄ‡∏õ‡∏¥‡∏î dialog ‡∏õ‡πâ‡∏≠‡∏ô‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏≠‡∏á
      const customAmount = prompt('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏õ‡πâ‡∏≠‡∏ô‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô:');
      if (customAmount && !isNaN(customAmount)) {
        receivedAmount = parseFloat(customAmount);
        document.getElementById('received').textContent = `‡∏ø${receivedAmount.toFixed(2)}`;
        calculateChange();
      }
    } else {
      const value = parseFloat(button.dataset.value);
      receivedAmount += value;
      document.getElementById('received').textContent = `‡∏ø${receivedAmount.toFixed(2)}`;
      calculateChange();
    }
  });
});

// ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô
function calculateChange() {
  const change = receivedAmount - totalAmount;
  document.getElementById('change').textContent = `‡∏ø${change > 0 ? change.toFixed(2) : '0.00'}`;
}

// ‡∏õ‡∏∏‡πà‡∏°‡∏û‡∏¥‡∏°‡∏û‡πå‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à
document.getElementById('printReceipt').addEventListener('click', () => {
  if (receivedAmount >= totalAmount) {
    alert('‡∏û‡∏¥‡∏°‡∏û‡πå‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!');
    // Reset ‡∏£‡∏∞‡∏ö‡∏ö
    totalAmount = 0;
    receivedAmount = 0;
    document.getElementById('totalDue').textContent = '‡∏ø0.00';
    document.getElementById('received').textContent = '‡∏ø0.00';
    document.getElementById('change').textContent = '‡∏ø0.00';
  } else {
    alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏Å‡πà‡∏≠‡∏ô‡∏û‡∏¥‡∏°‡∏û‡πå‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à');
  }
});


  
