
let totalAmountFromDjango = 0; // ‚úÖ ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£ global ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°



document.addEventListener("DOMContentLoaded", function () {
  var categorySelect = document.getElementById("categorySelect");

  document
    .getElementById("searchForm")
    .addEventListener("submit", function (event) {
      event.preventDefault(); // ‚úÖ ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡∏£‡∏µ‡πÇ‡∏´‡∏•‡∏î

      var categoryId = categorySelect.value; // ‚úÖ ‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
      var productList = document.getElementById("productList1"); // ‚úÖ ‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤

      fetch(`/apps_ecommerceCart/?category=${categoryId}`, {
        headers: { "X-Requested-With": "XMLHttpRequest" }, // ‚úÖ ‡πÅ‡∏à‡πâ‡∏á Django ‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô AJAX Request
      })
        .then((response) => response.text())
        .then((data) => {
          productList.innerHTML = data; // ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÅ‡∏ö‡∏ö Real-Time
        })
        .catch((error) => console.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ", error));
    });
});

// ----------------------------------‡∏™‡∏≥‡∏´‡∏£‡∏µ‡∏ö‡πÄ‡∏Ñ‡∏µ‡∏¢‡∏£‡πå‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠---------------------------
document
  .getElementById("clearFilterButton")
  .addEventListener("click", function (event) {
    event.preventDefault(); // ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏µ‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏ô‡πâ‡∏≤
    var productList = document.getElementById("productList1"); // ‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤

    fetch("/apps_ecommerceCart/", {
      method: "GET", // ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠ GET ‡πÑ‡∏õ‡∏¢‡∏±‡∏á URL
      headers: {
        "X-Requested-With": "XMLHttpRequest", // ‡πÅ‡∏à‡πâ‡∏á Django ‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏≥‡∏Ç‡∏≠ AJAX
      },
    })
      .then((response) => response.text()) // ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏õ‡πá‡∏ô HTML
      .then((data) => {
        productList.innerHTML = data; // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
      })
      .catch((error) => console.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ", error));
  });

// ----------------------------------‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•---------------------------

document.addEventListener("DOMContentLoaded", function () {
  const searchForm = document.getElementById("searchForm");
  const clearButton = document.getElementById("clearFilterButton");
  const productList = document.getElementById("productList1");

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠ AJAX ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏≠‡∏á
  function fetchProducts() {
    const formData = new FormData(searchForm);
    const urlParams = new URLSearchParams(formData).toString(); // ‡πÅ‡∏õ‡∏•‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÄ‡∏õ‡πá‡∏ô query string

    fetch(`/apps_ecommerceCart/?${urlParams}`, {
      method: "GET",
      headers: {
        "X-Requested-With": "XMLHttpRequest", // ‡πÅ‡∏à‡πâ‡∏á Django ‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏≥‡∏Ç‡∏≠ AJAX
      },
    })
      .then((response) => response.text()) // ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏õ‡πá‡∏ô HTML
      .then((data) => {
        productList.innerHTML = data;
        // ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
      })
      .catch((error) => console.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ", error));
  }

  // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏ñ‡∏π‡∏Å submit
  searchForm.addEventListener("submit", function (event) {
    event.preventDefault(); // ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏µ‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏ô‡πâ‡∏≤
    fetchProducts(); // ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠ AJAX
  });

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏≠‡∏á
  clearButton.addEventListener("click", function (event) {
    event.preventDefault(); // ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏µ‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏ô‡πâ‡∏≤

    // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ü‡∏≠‡∏£‡πå‡∏°
    searchForm.reset();

    // ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠ AJAX ‡πÉ‡∏´‡∏°‡πà‡πÉ‡∏´‡πâ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    fetchProducts();
  });

  // ‡πÄ‡∏û‡∏¥‡πà‡∏° event listener ‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
  const searchBarcode = document.getElementById("searchBarcode");
  searchBarcode.addEventListener("input", function () {
    fetchProducts(); // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà
  });

  // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏ô‡πâ‡∏≤ (‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏Å‡∏£‡∏≠‡∏á‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å)
  fetchProducts();
});

const cartItems = [];

document.addEventListener("click", function (event) {
  if (event.target.classList.contains("add-to-cart")) {
    console.log("üéØ ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ ‡∏ñ‡∏π‡∏Å‡∏Å‡∏î‡πÅ‡∏•‡πâ‡∏ß!");

    // ‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å data-attributes
    const productId = event.target.getAttribute("data-id");
    const productName = event.target.getAttribute("data-name");
    const productPrice = event.target.getAttribute("data-price");
    const productImage = event.target.getAttribute("data-image");
    const ProductStock = event.target.getAttribute("data-stock");
    const ProductBarcode = event.target.getAttribute("data-barcode");
    const ProductProfitprice = event.target.getAttribute("data-profitprice");

    console.log(
      `üìå ID=${productId}, Name=${productName}, Price=${productPrice}`
    );

    if (!productId || !productName || !productPrice) {
      console.error("‚ùå ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î");
      return;
    }

    const cartContainer = document.querySelector("#cart-items");

    // ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏à‡∏≤‡∏Å input ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏õ‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏Å‡∏î
    const parent = event.target.closest("p"); // ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ï‡∏≤‡∏°‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏à‡∏£‡∏¥‡∏á
    const quantityInput =
      parent?.previousElementSibling?.querySelector(".inputText");
    // ‚úÖ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô parseFloat ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏ó‡∏®‡∏ô‡∏¥‡∏¢‡∏°
    let quantity = quantityInput ? parseFloat(quantityInput.value) : 1;
    if (!quantity || quantity <= 0) quantity = 1;

    const totalPrice = (parseFloat(productPrice) * quantity).toLocaleString(
      "en-US",
      {
        minimumFractionDigits: 2,
        maximumFractionDigits: 2,
      }
    );

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    let existingProduct = document.querySelector(
      `.cart-item[data-id="${productId}"]`
    );

    if (existingProduct) {
      // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß ‡πÉ‡∏´‡πâ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô
      const existingQuantityInput =
        existingProduct.querySelector(".products-quantity");
      const currentQuantity = parseFloat(existingQuantityInput.value) || 0;
      const newQuantity = currentQuantity + quantity;
      existingQuantityInput.value = newQuantity;
      // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏≤‡∏Ñ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏£‡∏ß‡∏°
      const newTotal = (parseFloat(productPrice) * newQuantity).toLocaleString(
        "en-US",
        {
          minimumFractionDigits: 2,
          maximumFractionDigits: 2,
        }
      );

      existingProduct.querySelector(".products-line-price").textContent =
        newTotal;

      // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏≠‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
      const index = cartItems.findIndex((item) => item.id === productId);
      if (index !== -1) {
        cartItems[index].quantity += quantity;
        cartItems[index].total =
          parseFloat(productPrice) * cartItems[index].quantity;
      }

      // ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÅ‡∏ñ‡∏ß‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏î‡πâ‡∏≤‡∏ô‡∏Ç‡∏ß‡∏≤

      // ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï existingProduct ‡πÅ‡∏•‡πâ‡∏ß‡πÉ‡∏´‡πâ‡πÉ‡∏™‡πà

      const allTotal = cartItems.reduce((sum, item) => sum + item.total, 0);
      document.querySelector(
        ".cart-total"
      ).textContent = `${allTotal.toLocaleString("en-US", {
        minimumFractionDigits: 2,
      })} ‡∏ö‡∏≤‡∏ó`;

      const tableBody = document.querySelector(".table-total");
      const existingRow = tableBody?.querySelector(
        `tr[data-id="${productId}"]`
      );
      if (existingRow) {
        const priceCell = existingRow.querySelector(".product-total-cell");
        const oldTotal = parseFloat(priceCell.getAttribute("data-total")) || 0;
        const newRowTotal = oldTotal + parseFloat(productPrice) * quantity;
        priceCell.setAttribute("data-total", newRowTotal);
        priceCell.textContent = `${newRowTotal.toLocaleString("en-US", {
          minimumFractionDigits: 2,
        })} ‡∏ö‡∏≤‡∏ó`;
      }
    } else {
      // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô array
      cartItems.push({
        id: productId,
        stock: ProductStock,
        name: productName,
        barcode: ProductBarcode,
        Profitprice: ProductProfitprice,
        quantity: quantity,
        unitPrice: parseFloat(productPrice),
        total: parseFloat(productPrice) * quantity,
      });

   
      updateTotal();

      //------------------------------‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏áserver ------------------------------------------

      console.log("üì¶ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á Django:", cartItems); // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡πà‡∏≠‡∏ô‡∏™‡πà‡∏á

     


      function updateTotal() {
        console.log("üì¶ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á Django:", cartItems);
      
        fetch("/apps_ecommerceCart/", {
          method: "POST",
          headers: {
            "Content-Type": "application/json"
          },
          body: JSON.stringify({ items: cartItems })
        })
          .then(response => response.json())
          .then(data => {
            console.log("üìà Response:", data);
      
            // ‚úÖ ‡πÄ‡∏Å‡πá‡∏ö total ‡∏à‡∏≤‡∏Å Django ‡πÑ‡∏ß‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏†‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏á
            totalAmountFromDjango = parseFloat(data.total);
      
            // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÉ‡∏ô DOM ‡∏Å‡πá‡πÑ‡∏î‡πâ‡πÄ‡∏ä‡πà‡∏ô‡∏Å‡∏±‡∏ô
            const totalElement = document.getElementById("totalDisplay");
            if (totalElement) {
              totalElement.innerText = data.total;
            } else {
              console.warn("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö element ‡∏ó‡∏µ‡πà‡∏°‡∏µ id='totalDisplay'");
            }
          })
          .catch(error => {
            console.error("‚ùå Error calculating total:", error);
          });
      }

      
    

   






      console.log("‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£1", cartItems);
      console.log("‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤ inputText", quantity);

      //--------------------------------------------------------------------------------

      // ------------------------------------------------------------------------------‡πÄ‡∏î‡∏µ‡πà‡∏¢‡∏ß‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å django ‡∏á‡πà‡∏≤‡∏¢‡∏Å‡∏ß‡πà‡∏≤-------------------------------------------------------------

      /*function updateTotal() {
        const allTotal = cartItems.reduce((sum, item) => sum + item.total, 0);
        const formattedTotal = allTotal.toLocaleString("en-US", {
          minimumFractionDigits: 2,
        });

        const cartTotalElement = document.querySelector(".cart-total");
        const totalDueElement = document.getElementById("totalDue");

        if (cartTotalElement) {
          cartTotalElement.textContent = `${formattedTotal} ‡∏ö‡∏≤‡∏ó`;
        }

        if (totalDueElement) {
          totalDueElement.textContent = `‡∏ø${formattedTotal}`;
        }

        console.log("‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏ô‡∏ô‡∏µ‡πâ", formattedTotal);
      }
*/
      // -------------------------------------------------------------------------------‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏°‡∏∏‡∏°‡∏Ç‡∏ß‡∏≤‡∏™‡∏∏‡∏î-------------------------------------------------------------
      const tableBody = document.querySelector(".table-total");

      if (tableBody) {
        const totalRow = tableBody.querySelector(".cart-summary-row");
        const newRow = document.createElement("tr");
        newRow.setAttribute("data-id", productId); // ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏î‡πâ‡∏ß‡∏¢ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÑ‡∏î‡πâ
        newRow.innerHTML = `
                <td class="py-2 text-slate-500 dark:text-zink-200">${productName}</td>
                <td class="py-2 text-slate-500 dark:text-zink-200 product-total-cell" data-total="${
                  parseFloat(productPrice) * quantity
                }">${totalPrice} ‡∏ö‡∏≤‡∏ó</td>
              `;

        if (totalRow) {
          tableBody.insertBefore(newRow, totalRow); // ‚úÖ ‡πÅ‡∏ó‡∏£‡∏Å‡∏Å‡πà‡∏≠‡∏ô totalRow
        } else {
          tableBody.appendChild(newRow);
        }
        // ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏ó‡∏±‡πâ‡∏á‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô‡πÅ‡∏•‡∏∞‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏±‡∏ô‡∏ô‡πà‡∏∞‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏ß‡πà‡∏≤ ‡∏°‡∏±‡∏ô‡∏à‡∏∞‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏ö‡πÄ‡∏î‡∏ó
        const allTotal = cartItems.reduce((sum, item) => sum + item.total, 0);
        document.querySelector(
          ".cart-total"
        ).textContent = `${allTotal.toLocaleString("en-US", {
          minimumFractionDigits: 2,
        })} ‡∏ö‡∏≤‡∏ó`;
      } else {
        console.error("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö .table-total ‡πÉ‡∏ô DOM");
      }

      console.log("totalProfit", totalPrice);
      console.log("tableBody", tableBody);

      // ---------------------------------------------------------------------------------------------------------------------------------------------------

      // ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤ ‡πÉ‡∏´‡πâ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà
      const newItem = `
                <div class="card products cart-item" data-id="${productId}">
                    <div class="card-body">
                        <div class="grid grid-cols-1 gap-4 lg:grid-cols-12">
                            <div class="p-4 rounded-md lg:col-span-2 bg-slate-100 dark:bg-zink-600">
                                <img src="${productImage}" alt="">
                            </div>
                            <div class="flex flex-col lg:col-span-4">
                                <div>
                                    <h5 class="mb-1 text-16"><a href="#">${productName}</a></h5>
                                    <p class="mb-2 text-slate-500 dark:text-zink-200"><a href="#!">ID ${productId}</a></p>
                                    <p class="mb-1 text-slate-500 dark:text-zink-200">‡∏£‡∏≤‡∏Ñ‡∏≤: <span class="text-slate-800 dark:text-zink-50">${productPrice}</span></p>
                                    <p class="mb-1 text-slate-500 dark:text-zink-200">Stock: <span class="text-slate-800 dark:text-zink-50">${ProductStock}</span></p>
                                    <p class="mb-3 text-slate-500 dark:text-zink-200">Barcode: <span class="text-slate-800 dark:text-zink-50">${ProductBarcode}</span></p>
                                </div>
                                <div class="flex items-center gap-2 mt-auto">
                                    <div class="flex items-center">
                                        <span class="inline-block px-3 py-2 border ltr:border-r-0 rtl:border-l-0 border-slate-200 dark:border-zink-500 ltr:rounded-l-md rtl:rounded-r-md">PCS/Kg</span>
                                      <input type="number" class="inputText products-quantity ltr:rounded-l-none rtl:rounded-r-none form-input border-slate-200 dark:border-zink-500 bg-white dark:bg-zink-700 text-slate-900 dark:text-zink-100 focus:outline-none focus:border-custom-500" value="${quantity}">

                                    </div>
                                    <button class="remove-btn text-white bg-red-500 border-red-500 btn">‡∏•‡∏ö</button>
                                </div>
                            </div>
                            <div class="flex justify-between w-full lg:flex-col lg:col-end-13 lg:col-span-2">
                                <div class="mb-auto ltr:lg:text-right rtl:lg:text-left">
                                    <h6 class="text-16 products-price"><span>${productPrice}</span></h6>
                                </div>
                                <h6 class="mt-auto ltr:lg:text-right rtl:lg:text-left text-16">‡∏£‡∏ß‡∏° <span class="products-line-price">${totalPrice}</span></h6>
                            </div>
                        </div>
                    </div>
                </div>
            `;
      cartContainer.insertAdjacentHTML("beforeend", newItem);
    }
  }
});

document.addEventListener("click", function (event) {
  if (event.target.id === "sa-success") {
    Swal.fire({
      title: "‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡πâ‡∏ß!",
      text: "‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ñ‡∏π‡∏Å‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÅ‡∏•‡πâ‡∏ß!",
      icon: "success",
      confirmButtonText: "OK", // ‡∏ï‡∏±‡πâ‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏õ‡∏∏‡πà‡∏° OK
      customClass: {
        confirmButton:
          "text-white btn bg-custom-500 border-custom-500 hover:text-white hover:bg-custom-600 hover:border-custom-600 focus:text-white focus:bg-custom-600 focus:border-custom-600 focus:ring focus:ring-custom-100 active:text-white active:bg-custom-600 active:border-custom-600 active:ring active:ring-custom-100 dark:ring-custom-400/20 ltr:mr-1 rtl:ml-1",
      },
      buttonsStyling: false,
      showCloseButton: true, // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏≠‡∏¢‡∏≤‡∏Å‡πÉ‡∏´‡πâ‡∏°‡∏µ‡∏õ‡∏∏‡πà‡∏° X ‡∏õ‡∏¥‡∏î popup ‡πÉ‡∏´‡πâ‡∏•‡∏ö‡∏≠‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏≠‡∏≠‡∏Å
    });
  }
});

document.addEventListener("DOMContentLoaded", function () {
  const cartContainer = document.querySelector("#cart-items");

  cartContainer.addEventListener("click", function (event) {
    const removeButton = event.target.closest(".remove-btn"); // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏ö

    if (removeButton) {
      console.log("üõë ‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏ö‡∏ñ‡∏π‡∏Å‡∏Ñ‡∏•‡∏¥‡∏Å");

      const productCard = removeButton.closest(".card.products");

      if (productCard) {
        const productId = productCard.getAttribute("data-id");
        // ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡∏•‡∏ö
        Swal.fire({
          title: "‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?",
          text: "‡∏Ñ‡∏∏‡∏ì‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Å‡∏π‡πâ‡∏Ñ‡∏∑‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ!",
          icon: "warning",
          showCancelButton: true,
          confirmButtonText: "‡πÉ‡∏ä‡πà, ‡∏•‡∏ö‡∏≠‡∏≠‡∏Å‡πÄ‡∏•‡∏¢!",
          cancelButtonText: "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å",
          customClass: {
            confirmButton: "text-white btn bg-custom-500 border-custom-500",
            cancelButton: "text-white bg-red-500 border-red-500 btn",
          },
          buttonsStyling: false,
        }).then((result) => {
          if (result.isConfirmed) {
            // ‡∏•‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô
            productCard.remove();

            // ‡∏•‡∏ö‡∏à‡∏≤‡∏Å array ‡∏î‡πâ‡∏ß‡∏¢
            const index = cartItems.findIndex((item) => item.id === productId);
            if (index !== -1) {
              cartItems.splice(index, 1);
             
             
              console.log("üßπ ‡∏•‡∏ö‡∏à‡∏≤‡∏Å array ‡πÅ‡∏•‡πâ‡∏ß:", cartItems);
            }

            // ‡∏•‡∏ö‡πÅ‡∏ñ‡∏ß‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏î‡πâ‡∏≤‡∏ô‡∏Ç‡∏ß‡∏≤
            const tableBody = document.querySelector(".table-total");
            const rowToRemove = tableBody?.querySelector(
              `tr[data-id="${productId}"]`
            );
          

            if (rowToRemove) {
              rowToRemove.remove();
              // ‚úÖ ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô updateTotal ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•

              console.log("‚úÖ ‡∏•‡∏ö‡πÅ‡∏ñ‡∏ß‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÅ‡∏•‡πâ‡∏ß");
            
            }
            
            // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°
            const newTotal = cartItems.reduce(
              (sum, item) => sum + item.total,0);
            document.querySelector(".cart-total").textContent = `${newTotal.toLocaleString("en-US", {minimumFractionDigits: 2,})} ‡∏ö‡∏≤‡∏ó`;


                
            function updateTotal() {
                console.log("üì¶ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á Django:", cartItems);
              
                fetch("/apps_ecommerceCart/", {
                  method: "POST",
                  headers: {
                    "Content-Type": "application/json"
                  },
                  body: JSON.stringify({ items: cartItems })
                })
                  .then(response => response.json())
                  .then(data => {
                    console.log("üìà Response:", data);
              
                    // ‚úÖ ‡πÄ‡∏Å‡πá‡∏ö total ‡∏à‡∏≤‡∏Å Django ‡πÑ‡∏ß‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏†‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏á
                    totalAmountFromDjango = parseFloat(data.total);
              
                    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÉ‡∏ô DOM ‡∏Å‡πá‡πÑ‡∏î‡πâ‡πÄ‡∏ä‡πà‡∏ô‡∏Å‡∏±‡∏ô
                    const totalElement = document.getElementById("totalDisplay");
                    if (totalElement) {
                      totalElement.innerText = data.total;
                    } else {
                      console.warn("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö element ‡∏ó‡∏µ‡πà‡∏°‡∏µ id='totalDisplay'");
                    }
                  })
                  .catch(error => {
                    console.error("‚ùå Error calculating total:", error);
                  });
              }
      updateTotal();


            // ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
            Swal.fire({
              title: "‡∏•‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!",
              text: "‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ñ‡∏π‡∏Å‡∏•‡∏ö‡πÅ‡∏•‡πâ‡∏ß.",
              icon: "success",
            });
          }
        });
      }
    }
  });
});

// ------------------------------------------------------------------------------‡πÄ‡∏î‡∏µ‡πà‡∏¢‡∏ß‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å django ‡∏á‡πà‡∏≤‡∏¢‡∏Å‡∏ß‡πà‡∏≤-------------------------------------------------------------

/*document.addEventListener("DOMContentLoaded", () => {
    const number1 = document.getElementById("keypad-1");

    function numberOne() {
      console.log("‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà 1");
    }

    if (number1) {
      number1.addEventListener("click", numberOne);
    } else {
      console.log("‡∏´‡∏≤ element ‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠");
    }
  });*/

//‡πà-------------------------------------------------------‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£ ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å event ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏Å‡∏î-----------------------------------------------------

document.addEventListener("DOMContentLoaded", function () {
  const input = document.getElementById("posInput");

  // -----------------------------
  // ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ Keypad ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç
  // -----------------------------
  const keys = document.querySelectorAll("button[id^='keypad-']");
  keys.forEach((button) => {
    button.addEventListener("click", () => {
      const key = button.textContent;
      if (key === "C") {
        input.value = "";
      } else {
        input.value += key;
      }
    });
  });

  // -----------------------------
  // ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏õ‡∏∏‡πà‡∏° Shortcut ‡πÄ‡∏á‡∏¥‡∏ô
  // -----------------------------
  const shortcuts = document.querySelectorAll(".quick-bill");
  shortcuts.forEach((button) => {
    button.addEventListener("click", () => {
      const addAmount = parseFloat(button.dataset.value);
      const currentValue = parseFloat(input.value) || 0;
      const newValue = currentValue + addAmount;
      input.value = newValue.toFixed(2);
    });
  });

  // -----------------------------
  // ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏û‡∏¥‡∏°‡∏û‡πå‡∏à‡∏≤‡∏Å‡∏Ñ‡∏µ‡∏¢‡πå‡∏ö‡∏≠‡∏£‡πå‡∏î
  // -----------------------------
  document.addEventListener("keydown", function (e) {
    const allowedKeys = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "."];
    if (allowedKeys.includes(e.key)) {
      handleInput(e.key);
    } else if (e.key === "Backspace") {
      input.value = input.value.slice(0, -1);
    } else if (e.key === "Escape") {
      input.value = "";
    }
  });

  // -----------------------------
  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ Input ‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤
  // -----------------------------
  function handleInput(char) {
    let value = input.value;

    // ‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡πÄ‡∏Å‡∏¥‡∏ô 13 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£
    if (value.length >= 13) return;

    // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏à‡∏∏‡∏î
    if (char === ".") {
      if (value.includes(".")) return; // ‡∏°‡∏µ‡∏à‡∏∏‡∏î‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß
      if (value === "") {
        input.value = "0.";
        return;
      }
    }

    // ‡∏ï‡πà‡∏≠‡∏ó‡πâ‡∏≤‡∏¢‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç/‡∏à‡∏∏‡∏î
    input.value += char;
  }
});

//‡πà-------------------------------------------------------‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö event ‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô -----------------------------------------------------

console.log("‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å dejango5555",totalAmountFromDjango)

document.addEventListener("DOMContentLoaded", function () {
    const recipeButton = document.getElementById("RecipeMony");
  
    if (recipeButton) {
      recipeButton.addEventListener("click", handleReceiveMoney);
    } else {
      console.warn("‚ùó ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏õ‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà‡∏°‡∏µ id='RecipeMony'");
    }
  });
  
  function handleReceiveMoney() {
    const input = document.getElementById("posInput");
    const inputValue = parseFloat(input.value);
  
    if (isNaN(inputValue)) {
      alert("‚ö†Ô∏è ‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏õ‡πâ‡∏≠‡∏ô‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á");
      return;
    }
  
    console.log("üí∞ ‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô:", inputValue, " | ‡∏¢‡∏≠‡∏î‡∏à‡∏≤‡∏Å Django:", totalAmountFromDjango);
  
    if (inputValue < totalAmountFromDjango) {
      alert("‚ùå ‡∏Ñ‡∏∏‡∏ì‡∏õ‡πâ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏° ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á");
    } else {
        const change = inputValue - totalAmountFromDjango;

        // ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡πÉ‡∏ô DOM
        const receivedDisplay = document.getElementById("received");
        if (receivedDisplay) {
          receivedDisplay.textContent = `‡∏ø${inputValue.toFixed(2)}`;



          
        }

        // ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï DOM: ‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô
        const changeDisplay = document.getElementById("change");
         if (changeDisplay) {
            changeDisplay.textContent = `‡∏ø${change.toFixed(2)}`;
         }
    
        alert(`‚úÖ ‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!\n‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô: ${change.toFixed(2)} ‡∏ö‡∏≤‡∏ó`);
      }
  }
  